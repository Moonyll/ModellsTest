@model Modells.Models.picture
@{
    ViewBag.Title = "pictureCreate";
    Layout = "~/Views/Shared/_Layout.cshtml";

    // Class templates for the picture form :
    var formGroupCss = "form-group d-flex mx-auto justify-content-center";
    var labelCss = "control-label btn btn-dark col-4 text-center text-wrap";
    var controlLabelCss = "control-label btn btn-dark col-1 d-flex justify-content-center";
    var controlLabelAttr = "data-container=body data-toggle=popover data-placement=right";
    var editCss = "form-control col-6 was-validated";
    var btnCss = "btn btn-dark col-1 d-flex justify-content-center";

    @functions
    {
        // Display error messages for each property in a popover :
        string displayErrorMessage(string pictureItem)
        {
            var modelStateErrors = string.Join(" - ", ViewData.ModelState
                .Where(mdlState => mdlState.Key == pictureItem)
                .Where(errorsNb => errorsNb.Value.Errors.Count > 0)
                .SelectMany(errorItems => errorItems.Value.Errors)
                .Select(errorValue => errorValue.ErrorMessage)
                .ToList());

            return modelStateErrors;
        }
    }

        var toto = true;
        var pictureSourceToUpdate = "/Content/Images/Pictures/"+@Html.Display("pictureStandardUrl").ToString();

    }
@*Load scripts file*@
@Scripts.Render("~/Scripts/script.js");

<script>

    // test jquery

</script>

<div class="container-fluid d-flex">
    <div class="row mx-auto">

        @* Display choosen picture to create :*@
        <div class="col-sm-12 col-md-4 col-lg-4 border border-danger">
            <p class="btn btn-dark d-flex justify-content-center">Aperçu de votre image</p>
            <img id="pictureChoice" src="@pictureSourceToUpdate" alt="ici votre image" title="Aperçu image" class="card-img img-thumbnail mx-auto" />
            <p class="btn btn-dark d-flex justify-content-center m-2">---------------------</p>
        </div>

        @*Display the form to add a picture :*@
        <div class="col-sm-12 col-md-8 col-lg-8 border border-warning">
            @using (Html.BeginForm("pictureEdit", "Pictures", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()

                // Diplay the picture creation form :
            <form class="form-horizontal form-control">

                @*Hidden Id to enable savings :*@ 
                @Html.HiddenFor(model => model.pictureId)
                
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <fieldset class="border border-info">
                    @*Input of picture standard url :*@
                    <div class="@formGroupCss">
                        @Html.LabelFor(model => model.pictureStandardUrl, new { @class = @labelCss })
                        <input type="file" class="form-control" name="newPictureToUpload" id="newPictureToUpload" onchange=integratePicture(event) />
                        @Html.EditorFor(model => model.pictureStandardUrl, new { htmlAttributes = new { @class = @editCss + " pictureStandardUrl", @placeholder = "image.jpg", @onfocus = "clearCss(this)", @onchange = "isValid(this)" } })
                        <label for="newPictureToUpload" class="@controlLabelCss" @controlLabelAttr data-content="@displayErrorMessage("newPictureToUpload")">
                            <i class="far fa-image"></i>
                        </label>
                    </div>

                    @*Input of picture title :*@
                    <div class="@formGroupCss">
                        @Html.LabelFor(model => model.pictureTitle, new { @class = @labelCss })
                        @Html.EditorFor(model => model.pictureTitle, new { htmlAttributes = new { @class = @editCss, @placeholder = "titre", @onfocus = "clearCss(this)", @onblur = "isValid(this)" } })
                        <label class="@controlLabelCss" @controlLabelAttr data-content="@displayErrorMessage("pictureTitle")">
                            <i class="fas fa-bookmark"></i>
                        </label>
                    </div>

                    @*Input of picture alternative title :*@
                    <div class="@formGroupCss">
                        @Html.LabelFor(model => model.pictureAlternateTitle, new { @class = @labelCss })
                        @Html.EditorFor(model => model.pictureAlternateTitle, new { htmlAttributes = new { @class = @editCss, @placeholder = "titre alternatif", @onfocus = "clearCss(this)", @onblur = "isValid(this)" } })
                        <label class="@controlLabelCss" @controlLabelAttr data-content="@displayErrorMessage("pictureAlternateTitle")">
                            <i class="far fa-bookmark"></i>
                        </label>
                    </div>

                    @*Input of picture description :*@
                    <div class="@formGroupCss">
                        @Html.LabelFor(model => model.pictureDescription, new { @class = @labelCss })
                        @Html.TextAreaFor(model => model.pictureDescription, new { @class = @editCss, @placeholder = "descriptif", @style = "resize:none", @onfocus = "clearCss(this)", @onblur = "isValid(this)" })
                        <label class="@controlLabelCss" @controlLabelAttr data-content="@displayErrorMessage("pictureDescription")">
                            <i class="fas fa-pen"></i>
                        </label>
                    </div>

                    @*Input of picture category :*@
                    <div class="@formGroupCss">
                        @Html.LabelFor(model => model.categoryId, "Catégorie", new { @class = @labelCss })
                        @Html.DropDownList("categoryId", null, new { @class = @editCss })
                        <label class="@controlLabelCss">
                            <i class="fas fa-book-open"></i>
                        </label>
                    </div>

                    @*Back - Clear Submit buttons :*@
                    <div class="@formGroupCss">
                        <button type="button" class="@btnCss offset-3" onclick="location.href='@Url.Action("pictureCollection", "Pictures")'" data-toggle="tooltip" data-placement="bottom" title="Retour collection">
                            <i class="fas fa-home"></i>
                        </button>
                        <button value="Reset" class="@btnCss offset-2 resetForm" data-toggle="tooltip" data-placement="bottom" title="Réinitialiser">
                            <i class="fas fa-eraser"></i>
                        </button>
                        <button type="submit" value="pictureEdit" class="@btnCss offset-2" onclick="ValidateForm()" data-toggle="tooltip" data-placement="bottom" title="Ajouter image">
                            <i class="fas fa-plus"></i>
                        </button>
                    </div>
                </fieldset>
            </form>
            }
        </div>
    </div>
</div>