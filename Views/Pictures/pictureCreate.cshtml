@model Modells.Models.picture

@{
    ViewBag.Title = "pictureCreate";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

    <script>
        function integratePicureName() {

            // Get the picture entire source name from the upload :
            var pictureFileEntireName = $('input[type=file]').val();

            // Get the short name of the uploaded picture by removing prefixes "C:\fakepath" or "C:\fake_path" :
            var pictureFileShortName = pictureFileEntireName.split('\\').pop(); // 

            $(".pictureStandardUrl").val(pictureFileShortName);

            // Check if variable is correct :
            console.log(pictureFileShortName);
        }
    </script>

@using (Html.BeginForm("PictureCreate", "Pictures", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        <label for="newPictureToUpload">Ajouter Image <i class="fas fa-plus"></i></label>
        <input type="file" name="newPictureToUpload" id="newPictureToUpload" onchange=integratePicureName() />
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.pictureStandardUrl, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.pictureStandardUrl, new { htmlAttributes = new { @class = "form-control pictureStandardUrl" } })
            @Html.ValidationMessageFor(model => model.pictureStandardUrl, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.pictureTitle, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.pictureTitle, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.pictureTitle, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.pictureAlternateTitle, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.pictureAlternateTitle, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.pictureAlternateTitle, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.pictureDescription, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.pictureDescription, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.pictureDescription, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.categoryId, "Catégorie", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("categoryId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.categoryId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="pictureCreate" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index2")
</div>
